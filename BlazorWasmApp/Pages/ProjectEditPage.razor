@page "/projects/edit/{id:int?}"

@using Microsoft.AspNetCore.Authorization
@using SharedLib.Services
@using SharedLib.ClientServices.refit
@using SharedLib.Models

@inject SessionMarkerLiteModel sessionMarker
@inject IUsersProjectsRestService usersProjectsRefitService
@inject ILogger<ProjectEditPage> Logger

@attribute [Authorize]

<div class="card">

    <div class="card-header">
        <div class="row justify-content-between">
            <div class="col-4">
                @(Id.GetValueOrDefault(0) > 0 ? $"Проект #{Id}" : "Создание нового проекта")
            </div>
            <div class="col-4 text-end">
            </div>
        </div>
    </div>
    <div class="card-body">
        <TabSetComponent>
            <TabComponent Title="Основные" Tooltip="Основные настройки" OnClickCallback="@ReloadMainSettings">
                <UserProjectEditComponent id="@Id" @ref="userProjectEdit" />
            </TabComponent>
            <TabComponent Title="Ссылки" Tooltip="Ссылки на проект (пользователи, связанные с проектом)." IsDisabled="@(Id.GetValueOrDefault(0) == 0)">
                <LinksProjectManageComponent ProjectId="@Id" />
            </TabComponent>
            <TabComponent Title="Структура" Tooltip="Отчёт о составе проекта." IsDisabled="@(Id.GetValueOrDefault(0) == 0)">
                <ReportStructureProjectComponent ProjectId="@Id" />
            </TabComponent>
            <TabComponent Title="Активность" Tooltip="Логи редактирования." IsDisabled="@(Id.GetValueOrDefault(0) == 0)">
                <ReportLogsProjectComponent ProjectId="@Id" />
            </TabComponent>
        </TabSetComponent>
    </div>

</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    private UserProjectEditComponent userProjectEdit { get; set; }

    protected override async void OnInitialized()
    {
        if (Id.GetValueOrDefault(0) <= 0)
        {
            //project = new ProjectModelDB();
            return;
        }

        //await userProjectEdit.ReloadForm(id.GetValueOrDefault(0));
    }

    private async Task ReloadMainSettings(MouseEventArgs e)
    {
        Logger.LogWarning($"call > {nameof(ReloadMainSettings)}");
        await userProjectEdit.ReloadForm(Id.GetValueOrDefault(0));
    }
}
